[build-system]
requires = [
    "setuptools>=77.0",
    "wheel",
    "cmake<4.0",
    'uiucprescon.build @ https://github.com/UIUCLibrary/uiucprescon_build/releases/download/v0.2.6/uiucprescon_build-0.2.6-py3-none-any.whl',
#    "conan>=1.50.0,<2.0",
    "conan>=2.7",

]

build-backend = "uiucprescon.build"


[project]
name = "uiucprescon.imagevalidate"
version = "0.1.10.dev4"
dependencies = [
    "py3exiv2bind>=0.1.9"
]
requires-python = ">=3.9"
readme = "README.rst"
license = "NCSA"
license-files = ["LICENSE"]
authors = [
    {name = "University Library at The University of Illinois at Urbana Champaign: Preservation Services", email = "prescons@library.illinois.edu"},
]
maintainers = [
    {name = "Henry Borchers", email = "hborcher@illinois.edu"}
]
description = "Validate image metadata"
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Multimedia :: Graphics",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]
[project.urls]
Documentation = "https://www.library.illinois.edu/dccdocs/imagevalidate"
Download = "https://github.com/UIUCLibrary/imagevalidate"

[tool.setuptools]
packages = [
    "uiucprescon.imagevalidate",
    "uiucprescon.imagevalidate.profiles",
]
include-package-data = false

[tool.setuptools.package-data]
"uiucprescon.imagevalidate" = ["py.typed"]

[tool.coverage.run]
relative_files = true
branch = true


[tool.mypy]
ignore_missing_imports = true


[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--verbose"
norecursedirs = "build"
markers = "integration"
junit_family="xunit2"

[tool.cibuildwheel]
test-requires = "pytest"
test-command = "pytest {project}/tests"
manylinux-x86_64-image = "manylinux2014"
build-frontend = "build[uv]"
skip = [
    "cp36-*",
    "cp37-*",
    "cp38-*",
    "pp*",
    "*-win32",
    "*-musllinux*",
    "*-manylinux_i686"
]
build-verbosity = 1
environment-pass = ["CONAN_COMPILER_LIBCXX", "CONAN_COMPILER_VERSION", "CONAN_USER_HOME", "PIP_EXTRA_INDEX_URL", "UV_EXTRA_INDEX_URL", "UV_INDEX_STRATEGY"]
environment = { UV_CONSTRAINT = "requirements-dev.txt"}
[tool.cibuildwheel.windows]
before-all = [
    "python -m venv %TEMP\\cibuildwheelvenv",
    "%TEMP\\cibuildwheelvenv\\Scripts\\pip install --disable-pip-version-check uv",
    "%TEMP\\cibuildwheelvenv\\Scripts\\uvx --with cmake conan profile detect --exist-ok",
    "%TEMP\\cibuildwheelvenv\\Scripts\\uvx --with cmake conan install conanfile.py --build missing -of=%TEMP\\conandelme",
]
[tool.cibuildwheel.windows.environment]
CONAN_USER_HOME="$TEMP/conan"

[tool.cibuildwheel.macos]
before-all = [
    "python3 -m venv /tmp/cibuildwheelvenv",
    "/tmp/cibuildwheelvenv/bin/pip install --disable-pip-version-check uv",
    "/tmp/cibuildwheelvenv/bin/uvx --with 'cmake<4.0' conan profile detect --exist-ok",
    "trap 'rm -rf /tmp/conandelme' EXIT && /tmp/cibuildwheelvenv/bin/uvx --with 'cmake<4.0'  conan install conanfile.py --build missing -of=/tmp/conandelme"
]
environment-pass = ["CONAN_COMPILER_VERSION", "CONAN_USER_HOME"]
repair-wheel-command = [
  "/tmp/cibuildwheelvenv/bin/uvx --from delocate delocate-listdeps {wheel}",
  "/tmp/cibuildwheelvenv/bin/uvx --from delocate delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}",
]

[tool.cibuildwheel.macos.environment]
ENVTMPDIR="/tmp/conan"
CONAN_USER_HOME="/tmp/conan"


[tool.cibuildwheel.linux]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"
before-all = [
    "cc --version", "cc -dumpfullversion -dumpversion",
    "uvx --with cmake conan profile detect --exist-ok",
    "trap 'rm -rf /tmp/conandelme' EXIT && uvx --with 'cmake<4.0' conan install conanfile.py --build missing -pr:b=default -of /tmp/conandelme",
]
[tool.cibuildwheel.linux.environment]
CONAN_USER_HOME="/tmp/conan"
PYTHONFAULTHANDLER="True"

[tool.uv]
cache-keys = [{ file = "pyproject.toml" }, { file = "requirements-dev.txt" }, { file = "setup.py" }]