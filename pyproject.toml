[build-system]
requires = [
    "setuptools>=77.0",
    "wheel",
    "cmake<4.0",
    'uiucprescon.build @ https://github.com/UIUCLibrary/uiucprescon_build/releases/download/v0.4.0/uiucprescon_build-0.4.0-py3-none-any.whl',
#    "conan>=1.50.0,<2.0",
    "conan>=2.7",

]

build-backend = "uiucprescon.build"


[project]
name = "uiucprescon.imagevalidate"
version = "0.1.10.dev4"
dependencies = [
    "py3exiv2bind>=0.1.9"
]
requires-python = ">=3.10"
readme = "README.rst"
license = "NCSA"
license-files = ["LICENSE"]
authors = [
    {name = "University Library at The University of Illinois at Urbana Champaign: Preservation Services", email = "prescons@library.illinois.edu"},
]
maintainers = [
    {name = "Henry Borchers", email = "hborcher@illinois.edu"}
]
description = "Validate image metadata"
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Multimedia :: Graphics",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3.10",
]
[project.urls]
Documentation = "https://www.library.illinois.edu/dccdocs/imagevalidate"
Download = "https://github.com/UIUCLibrary/imagevalidate"

[dependency-groups]
docs = ["sphinx"]
type_checking = [
    "mypy",
    "lxml",
]
lint = [
    {include-group = "type_checking"},
    "bandit",
    "flake8",
    "pylint",
    "pydocstyle"
]
tox = ["tox"]
test = ["coverage[toml]", "gcovr", "pytest"]
conan = ["conan>=2.0", "cmake<4.0"]
dev = [
    {include-group = "conan"},
    {include-group = "docs"},
    {include-group = "lint"},
    {include-group = "test"},
]
release = ["twine"]
ci = [
    {include-group = "release"},
    {include-group = "dev"},
    "pysonar",
]
package = ["delocate ; sys_platform == 'darwin'"]
cibuildwheel = ['cibuildwheel']

[tool.setuptools]
packages = [
    "uiucprescon.imagevalidate",
    "uiucprescon.imagevalidate.profiles",
]
package-dir = {"uiucprescon.imagevalidate" = "src/uiucprescon/imagevalidate"}

include-package-data = false

[tool.setuptools.package-data]
"uiucprescon.imagevalidate" = ["py.typed"]

[tool.coverage.run]
relative_files = true
branch = true

[tool.mypy]
ignore_missing_imports = true
mypy_path = "src"

[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--verbose"
norecursedirs = "build"
markers = "integration"
junit_family="xunit2"

[tool.cibuildwheel]
test-groups = ["test"]
test-command = "pytest {project}/tests"
manylinux-x86_64-image = "manylinux_2_28"
build-frontend = "build[uv]"
skip = [
    "cp38-*",
    "cp314-*",
    "cp314t-*",
    "*-win32",
    "*-musllinux*",
    "*-manylinux_i686"
]
build-verbosity = 1
environment-pass = ["CONAN_COMPILER_LIBCXX", "CONAN_COMPILER_VERSION", "CONAN_USER_HOME", "PIP_EXTRA_INDEX_URL", "UV_EXTRA_INDEX_URL", "UV_INDEX_STRATEGY"]

[tool.cibuildwheel.windows]
before-all = [
    'echo Conan user home: %CONAN_USER_HOME%',
    'echo Conan home: %CONAN_HOME%',
    'uv run --only-group=conan --with ninja --isolated conan profile detect --exist-ok',
    'uv run --only-group=conan --with ninja --isolated conan install conanfile.py --build missing --conf=tools.cmake.cmaketoolchain:generator=Ninja',
]
[tool.cibuildwheel.windows.environment]
CONAN_USER_HOME="$TEMP/conan"

[tool.cibuildwheel.macos]
before-all = [
    'echo "Conan user home: $CONAN_USER_HOME"',
    'echo "Conan home: $CONAN_HOME"',
    'uv run --only-group=conan --with ninja --isolated conan profile detect --exist-ok',
    "uv run --only-group=conan --with ninja --isolated conan install conanfile.py -pr:h {package}/ci/cibuildwheel/conan_profiles/Macos/mac_host_profile.ini --build missing -of=/tmp/ciwheelbuilder/uiucprescon_imagevalidate/tmp --conf=tools.cmake.cmaketoolchain:generator=Ninja"
]
environment-pass = ["CONAN_COMPILER_VERSION", "CONAN_USER_HOME"]
repair-wheel-command = [
  "delocate-listdeps {wheel}",
  "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}",
]
[tool.cibuildwheel.macos.environment]
ENVTMPDIR="/tmp/conan"
CONAN_USER_HOME="$(bash -c 'echo ${CONAN_USER_HOME:-${CIBW_CACHE_PATH:-$HOME/Library/Caches/cibuildwheel}/conan/macos}')"
CONAN_HOME="$(bash -c 'echo ${CONAN_HOME:-${CIBW_CACHE_PATH:-$HOME/Library/Caches/cibuildwheel}/conan/macos/.conan2}')"
CONAN_DEFAULT_PROFILE_PATH="/tmp/conan/.conan/profiles/default"
CONAN_BUILD_INFO_DIR="/tmp/conan/build/"
MACOSX_DEPLOYMENT_TARGET='11.0'

[tool.cibuildwheel.linux]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"
before-all = [
    "cc --version", "cc -dumpfullversion -dumpversion",
    'echo "Conan user home: $CONAN_USER_HOME"',
    'echo "Conan home: $CONAN_HOME"',
    'uv run --only-group=conan --with ninja --isolated conan profile detect --exist-ok',
    'uv run --only-group=conan --with ninja --isolated conan install conanfile.py -pr:h {package}/ci/cibuildwheel/conan_profiles/Linux/linux_build_profile.ini --build missing -of /tmp/ciwheelbuilder/uiucprescon_orc/tmp --conf=tools.cmake.cmaketoolchain:generator=Ninja',

]
[tool.cibuildwheel.linux.environment]
PYTHONFAULTHANDLER="True"
CONAN_USER_HOME="/tmp/conan/manylinux"
CONAN_HOME="/tmp/conan/manylinux/.conan2"

[tool.uv]
cache-keys = [
    { file = "pyproject.toml" },
    { file = "conanfile.py" },
    { file = "setup.py" },
    { file = "src/uiucprescon/imagevalidate/CMakeLists.txt" },
    { file = "src/**/*.h" },
    { file = "src/**/*.cpp" }
]

[tool.uv.sources]
py3exiv2bind = {index = "uiuc_prescon_python"}

[[tool.uv.index]]
url = "https://pypi.org/simple"
default = true

[[tool.uv.index]]
name = "uiuc_prescon_python"
url = "https://nexus.library.illinois.edu/repository/uiuc_prescon_python/simple"
explicit = true